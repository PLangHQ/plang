{
  "Hash": null,
  "SignedMessage": null,
  "Text": "write out system error \"%!error%\"",
  "ModuleType": "PLang.Modules.OutputModule",
  "GenericFunctionType": "PLang.Modules.BaseBuilder+GenericFunction",
  "Function": {
    "Reasoning": "The user wants to write out the system error object %!error% as output. The Write method with type 'error' and channel 'system' is appropriate to display system error messages.",
    "Name": "Write",
    "Parameters": [
      {
        "Type": "System.Object",
        "Name": "content",
        "Value": "%!error%"
      },
      {
        "Type": "System.String",
        "Name": "type",
        "Value": "error"
      },
      {
        "Type": "System.Int32",
        "Name": "statusCode",
        "Value": 500
      },
      {
        "Type": "System.Collections.Generic.Dictionary`2[System.String,System.Object]",
        "Name": "paramaters",
        "Value": null
      },
      {
        "Type": "System.String",
        "Name": "channel",
        "Value": "system"
      }
    ],
    "ReturnValues": null
  },
  "Properties": {
    "Parameters": {
      "content": {
        "Name": "content",
        "FullTypeName": "System.Object"
      },
      "type": {
        "Name": "type",
        "FullTypeName": "System.String"
      },
      "statusCode": {
        "Name": "statusCode",
        "FullTypeName": "System.Int32"
      },
      "paramaters": {
        "Name": "paramaters",
        "FullTypeName": "System.Collections.Generic.Dictionary`2[System.String,System.Object]"
      },
      "channel": {
        "Name": "channel",
        "FullTypeName": "System.String"
      }
    },
    "ReturnValues": {}
  },
  "LlmRequest": [
    {
      "temperature": 0.0,
      "top_p": 0.0,
      "frequencyPenalty": 0.0,
      "presencePenalty": 0.0,
      "maxLength": 4000,
      "llmResponseType": "json",
      "scheme": "{\"Reasoning\" : System.String, \"Name\" : System.String, \"Parameters\" : System.Collections.Generic.List`1[PLang.Modules.BaseBuilder+Parameter] = null, \"ReturnValues\" : System.Collections.Generic.List`1[PLang.Modules.BaseBuilder+ReturnValue] = null}\n\nAdditional information about objects:\nPLang.Modules.BaseBuilder+Parameter : {\"Type\" : System.String, \"Name\" : System.String, \"Value\" : System.Object}\nPLang.Modules.BaseBuilder+ReturnValue : {\"Type\" : System.String, \"VariableName\" : System.String}",
      "model": "gpt-4.1-mini",
      "promptMessage": [
        {
          "role": "system",
          "content": [
            {
              "type": "text",
              "text": "User is writing code in plang programming language.\r\n\r\nYour job is: \r\n1. Parse and understand user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\n## Rules\r\n%variable% in plang is defined with starting and ending percentage sign (%)\r\n%variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nleave %variable% as is and do not change text to a variable\r\nnull is used to represent no value, e.g. { \"name\": null }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See <Example>\r\nError handling is process by another step, if you see 'on error...' you can ignore it\r\nIf there is some api key, settings, config replace it with %Settings.NameOfApiKey% \r\n- NameOfApiKey should named in relation to what is happening if change is needed\r\nDictionary<T1, T2> value is {key: value, ... }\r\nONLY when string is prefixed with # is for translation, modify the string to be \"#:...\", e.g. #\"Hello\" => \"#:Hello\".\r\nVariable with ToString with date/time formatting, assume it is System.DateTime, e.g. %updated.ToString(\"yyyy-MM-dd\")% then type of %updated% is System.DateTime \r\n \r\n<Example>\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n<Example>\r\n\r\n## JSON scheme information\r\nReasoning: A brief description of the reasoning behind the selection of the function and parameters based on the user's intent. This property provides context for why a particular function was chosen and how it aligns with the user intent.\r\nName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null."
            },
            {
              "type": "text",
              "text": "You MUST respond in JSON, scheme:\r\n {\"Reasoning\" : System.String, \"Name\" : System.String, \"Parameters\" : System.Collections.Generic.List`1[PLang.Modules.BaseBuilder+Parameter] = null, \"ReturnValues\" : System.Collections.Generic.List`1[PLang.Modules.BaseBuilder+ReturnValue] = null}  Additional information about objects: PLang.Modules.BaseBuilder+Parameter : {\"Type\" : System.String, \"Name\" : System.String, \"Value\" : System.Object} PLang.Modules.BaseBuilder+ReturnValue : {\"Type\" : System.String, \"VariableName\" : System.String}"
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "## Canonical User Intent (already disambiguated by LLM)\r\nDisplay the current system error message to the user or output stream\n## functions available starts ##\r\n{\"Methods\":[{\"MethodName\":\"SetOutputStream\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"channel\",\"IsRequired\":true},{\"Type\":\"PLang.Models.GoalToCallInfo\",\"Name\":\"goalToCall\",\"Description\":\"(see Type information in SupportingObjects)\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"parameters\",\"IsRequired\":false}]},{\"Description\":\"Send to a question to the output stream and waits for answer.\",\"MethodName\":\"Ask\",\"Parameters\":[{\"Type\":\"PLang.Modules.OutputModule.Program+AskOptions\",\"Name\":\"askOptions\",\"Description\":\"(see Type information in SupportingObjects)\",\"IsRequired\":true}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"Description\":\"Write out json content. Only choose this method when it's clear user is defining a json output, e.g. `- write out '{name:John}'. Do your best to make sure that content is valid json. Any %variable% should have double quotes around it. type can be text|warning|error|info|debug|trace. statusCode(like http status code) should be defined by user. type=error should have statusCode between 400-599, depending on text. channel=user|system|logger|audit|metric. User can also define his custom channel\",\"MethodName\":\"WriteJson\",\"Parameters\":[{\"Type\":\"System.Object\",\"Name\":\"content\",\"IsRequired\":true},{\"Type\":\"PLang.Modules.OutputModule.Program+JsonOptions\",\"Name\":\"jsonOptions\",\"Description\":\"(see Type information in SupportingObjects)\",\"IsRequired\":false},{\"Type\":\"System.String\",\"Name\":\"type\",\"DefaultValue\":\"text\",\"IsRequired\":false},{\"Type\":\"System.Int32\",\"Name\":\"statusCode\",\"DefaultValue\":200,\"IsRequired\":false},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"paramaters\",\"IsRequired\":false},{\"Type\":\"System.String\",\"Name\":\"channel\",\"IsRequired\":false}]},{\"MethodName\":\"Write\",\"Parameters\":[{\"Type\":\"System.Object\",\"Name\":\"content\",\"IsRequired\":true},{\"Type\":\"PLang.Modules.OutputModule.Program+OutputStreamInfo\",\"Name\":\"outputStreamInfo\",\"Description\":\"(see Type information in SupportingObjects)\",\"IsRequired\":true}]},{\"Description\":\"Write to the output. type can be text|warning|error|info|debug|trace. statusCode(like http status code) should be defined by user. type=error should have statusCode between 400-599, depending on text. channel=user|system|logger|audit|metric. User can also define his custom channel\",\"MethodName\":\"Write\",\"Parameters\":[{\"Type\":\"System.Object\",\"Name\":\"content\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"type\",\"DefaultValue\":\"text\",\"IsRequired\":false},{\"Type\":\"System.Int32\",\"Name\":\"statusCode\",\"DefaultValue\":200,\"IsRequired\":false},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"paramaters\",\"IsRequired\":false},{\"Type\":\"System.String\",\"Name\":\"channel\",\"IsRequired\":false}]}],\"SupportingObjects\":[{\"Type\":\"PLang.Models.GoalToCallInfo\",\"Name\":\"goalToCall\",\"Description\":\"Name of goal and parameters that is called, e.g. in condition, loops, run goal. Keep Name as user defines it with path\",\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Name\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"Parameters\",\"Description\":\"Name of goal and parameters that is called, e.g. in condition, loops, run goal. Keep Name as user defines it with path\",\"IsRequired\":true}],\"IsRequired\":false},{\"Type\":\"PLang.Modules.OutputModule.Program+AskOptions\",\"Name\":\"askOptions\",\"Description\":\"Remove % from AnswerVariableName. TemplateFile points to a file for custom rendering\",\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Question\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.String]\",\"Name\":\"ValidationRegexPatternAndErrorMessage\",\"Description\":\"Remove % from AnswerVariableName. TemplateFile points to a file for custom rendering\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"CallbackData\",\"Description\":\"Remove % from AnswerVariableName. TemplateFile points to a file for custom rendering\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.String]\",\"Name\":\"Choices\",\"Description\":\"Remove % from AnswerVariableName. TemplateFile points to a file for custom rendering\",\"IsRequired\":true},{\"Type\":\"System.Boolean\",\"Name\":\"IsMultiChoice\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"TemplateFile\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"AnswerVariableName\",\"IsRequired\":true},{\"Type\":\"System.Boolean\",\"Name\":\"IncludeNonce\",\"IsRequired\":true}],\"IsRequired\":false},{\"Type\":\"PLang.Modules.OutputModule.Program+JsonOptions\",\"Name\":\"jsonOptions\",\"TypeProperties\":[{\"Type\":\"Newtonsoft.Json.NullValueHandling\",\"Name\":\"NullValueHandling\",\"AvailableValues\":\"Include|Ignore\",\"IsRequired\":true},{\"Type\":\"Newtonsoft.Json.DateFormatHandling\",\"Name\":\"DateFormatHandling\",\"AvailableValues\":\"IsoDateFormat|MicrosoftDateFormat\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"DateFormatString\",\"IsRequired\":true},{\"Type\":\"Newtonsoft.Json.DefaultValueHandling\",\"Name\":\"DefaultValueHandling\",\"AvailableValues\":\"Include|Ignore|Populate|IgnoreAndPopulate\",\"IsRequired\":true},{\"Type\":\"Newtonsoft.Json.Formatting\",\"Name\":\"Formatting\",\"AvailableValues\":\"None|Indented\",\"IsRequired\":true},{\"Type\":\"Newtonsoft.Json.ReferenceLoopHandling\",\"Name\":\"ReferenceLoopHandling\",\"AvailableValues\":\"Error|Ignore|Serialize\",\"IsRequired\":true}],\"IsRequired\":false},{\"Type\":\"PLang.Modules.OutputModule.Program+OutputStreamInfo\",\"Name\":\"outputStreamInfo\",\"Description\":\"channel=user|system|audit|metric|trace|debug|info|warning|error| or user defined channel, serializer=default(current serializer)|json|csv|xml or user defined\",\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Channel\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"Serializer\",\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\"Name\":\"Options\",\"Description\":\"channel=user|system|audit|metric|trace|debug|info|warning|error| or user defined channel, serializer=default(current serializer)|json|csv|xml or user defined\",\"IsRequired\":true}],\"IsRequired\":false}]}\r\n## functions available ends ##\r\n## defined variables ##\r\n!error (type:object), \r\n## defined variables ##"
            }
          ]
        },
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              "text": "write out system error \"%!error%\""
            }
          ]
        }
      ],
      "type": "PLang.Modules.GenericFunctionBuilder",
      "caching": true,
      "RawResponse": "{\n  \"Reasoning\": \"The user wants to write out the system error object %!error% as output. The Write method with type 'error' and channel 'system' is appropriate to display system error messages.\",\n  \"Name\": \"Write\",\n  \"Parameters\": [\n    {\n      \"Type\": \"System.Object\",\n      \"Name\": \"content\",\n      \"Value\": \"%!error%\"\n    },\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"type\",\n      \"Value\": \"error\"\n    },\n    {\n      \"Type\": \"System.Int32\",\n      \"Name\": \"statusCode\",\n      \"Value\": 500\n    },\n    {\n      \"Type\": \"System.Collections.Generic.Dictionary`2[System.String,System.Object]\",\n      \"Name\": \"paramaters\",\n      \"Value\": null\n    },\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"channel\",\n      \"Value\": \"system\"\n    }\n  ],\n  \"ReturnValues\": null\n}"
    }
  ]
}