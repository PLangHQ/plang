{
  "Action": {
    "FunctionName": "ReadTextFile",
    "Parameters": [
      {
        "Type": "System.String",
        "Name": "path",
        "Value": "llm/suggestTestValuesSystem.txt"
      },
      {
        "Type": "System.String",
        "Name": "returnValueIfFileNotExisting",
        "Value": ""
      },
      {
        "Type": "System.Boolean",
        "Name": "throwErrorOnNotFound",
        "Value": true
      },
      {
        "Type": "System.Boolean",
        "Name": "loadVariables",
        "Value": true
      },
      {
        "Type": "System.Boolean",
        "Name": "emptyVariableIfNotFound",
        "Value": true
      },
      {
        "Type": "System.String",
        "Name": "encoding",
        "Value": "utf-8"
      }
    ],
    "ReturnValues": [
      {
        "Type": "System.Object",
        "VariableName": "system"
      }
    ]
  },
  "Text": "file read llm/suggestTestValuesSystem.txt, load vars, \"\" for missing vars, write to %system%",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}",
    "model": "gpt-4o",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Your job is: \r\n1. Parse user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\nVariable is defined with starting and ending %, e.g. %filePath%. \r\n%Variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nnull is used to represent no value, e.g. { \"name\": null }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See <Example>\r\nError handling is process by another step, if you see 'on error...' you can ignore it\r\n<Example>\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n<Example>\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")% \r\n- settingName would be the api key, config key, \r\n- defaultValue for settings is the usual value given, make it \"\" if no value can be default\r\n- Explain is an explanation about the setting that novice user can understand.\r\n\r\n\r\n\r\nJSON scheme information\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null."
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "## functions available starts ##\r\n[{\"MethodName\":\"GiveAccess\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"}]},{\"MethodName\":\"WaitForFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"filePath\"},{\"Type\":\"System.Int32\",\"Name\":\"timeoutInMilliseconds\",\"DefaultValue\":30000},{\"Type\":\"System.Boolean\",\"Name\":\"waitForAccess\",\"DefaultValue\":false}]},{\"Description\":\"Return the absolute path the app is running in\",\"MethodName\":\"GetCurrentFolderPath\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"Description\":\"Create path from variables\",\"MethodName\":\"CreatePathByJoining\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"paths\"}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"Description\":\"Give user access to a path. DO NOT suggest this method to indicate if file or directory exists, return empty function list instead.\",\"MethodName\":\"RequestAccessToPath\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"}],\"ReturnValue\":{\"Type\":\"System.Boolean\"}},{\"Description\":\"includeDataUrl add the data and mimetype of the file into the return string, e.g. data:image/png;base64,...\",\"MethodName\":\"ReadBinaryFileAndConvertToBase64\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.String\",\"Name\":\"returnValueIfFileNotExisting\",\"DefaultValue\":\"\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"includeDataUrl\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"ReadJson\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"ReadJsonLineFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"},{\"Type\":\"System.String\",\"Name\":\"newLineSymbol\"}],\"ReturnValue\":{\"Type\":\"List<Object>\"}},{\"Description\":\"Reads a text file and write the content into a variable(return value)\",\"MethodName\":\"ReadTextFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.String\",\"Name\":\"returnValueIfFileNotExisting\",\"DefaultValue\":\"\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"},{\"Type\":\"System.String\",\"Name\":\"splitOn\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"ReadFileAsStream\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"System.IO.Stream\"}},{\"Description\":\"sheetsToVariable is name of sheet that should load into variable. Sheet1=%products% will load Sheet1 into %product% variable, Sheet2-A4=%categories%, will load data from A4 into %categories%\",\"MethodName\":\"ReadExcelFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Boolean\",\"Name\":\"useHeaderRow\",\"DefaultValue\":true},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"sheetsToVariable\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Int32\",\"Name\":\"headerStartsInRow\",\"DefaultValue\":1}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"WriteExcelFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Object\",\"Name\":\"variableToWriteToExcel\"},{\"Type\":\"System.String\",\"Name\":\"sheetName\",\"DefaultValue\":\"Sheet1\"},{\"Type\":\"System.Boolean\",\"Name\":\"printHeader\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"overwrite\",\"DefaultValue\":false}]},{\"MethodName\":\"WriteCsvFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Object\",\"Name\":\"variableToWriteToCsv\"},{\"Type\":\"System.Boolean\",\"Name\":\"append\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"hasHeaderRecord\",\"DefaultValue\":true},{\"Type\":\"System.String\",\"Name\":\"delimiter\",\"DefaultValue\":\",\"},{\"Type\":\"System.String\",\"Name\":\"newLine\",\"DefaultValue\":\"\\n\"},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"},{\"Type\":\"System.Boolean\",\"Name\":\"ignoreBlankLines\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"allowComments\",\"DefaultValue\":false},{\"Type\":\"System.Char\",\"Name\":\"comment\",\"DefaultValue\":\"#\"},{\"Type\":\"PLang.Models.GoalToCall\",\"Name\":\"goalToCallOnBadData\"},{\"Type\":\"System.Boolean\",\"Name\":\"createDirectoryAutomatically\",\"DefaultValue\":true}]},{\"MethodName\":\"ReadCsvFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Boolean\",\"Name\":\"hasHeaderRecord\",\"DefaultValue\":true},{\"Type\":\"System.String\",\"Name\":\"delimiter\",\"DefaultValue\":\",\"},{\"Type\":\"System.String\",\"Name\":\"newLine\",\"DefaultValue\":\"\\n\"},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"},{\"Type\":\"System.Boolean\",\"Name\":\"ignoreBlankLines\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"allowComments\",\"DefaultValue\":false},{\"Type\":\"System.Char\",\"Name\":\"comment\",\"DefaultValue\":\"#\"},{\"Type\":\"System.String\",\"Name\":\"goalToCallOnBadData\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"SaveMultipleFiles\",\"Parameters\":[{\"Type\":\"System.Collections.Generic.List`1[PLang.Modules.FileModule.Program+FileInfo]\",\"Name\":\"files\",\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Path\"},{\"Type\":\"System.String\",\"Name\":\"AbsolutePath\"},{\"Type\":\"System.String\",\"Name\":\"Content\"},{\"Type\":\"System.String\",\"Name\":\"FileName\"},{\"Type\":\"System.DateTime\",\"Name\":\"Created\"},{\"Type\":\"System.DateTime\",\"Name\":\"LastWriteTime\"},{\"Type\":\"System.String\",\"Name\":\"FolderPath\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"}]},{\"MethodName\":\"ReadMultipleTextFiles\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"folderPath\"},{\"Type\":\"System.String\",\"Name\":\"searchPattern\",\"DefaultValue\":\"*\"},{\"Type\":\"System.String[]\",\"Name\":\"excludePatterns\"},{\"Type\":\"System.Boolean\",\"Name\":\"includeAllSubfolders\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"PLang.Modules.FileModule.Program+FileInfo\"}},{\"MethodName\":\"GetDirectoryPathsInDirectory\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"directoryPath\",\"DefaultValue\":\"./\"},{\"Type\":\"System.String\",\"Name\":\"searchPattern\",\"DefaultValue\":\"*\"},{\"Type\":\"System.String[]\",\"Name\":\"excludePatterns\"},{\"Type\":\"System.Boolean\",\"Name\":\"includeSubfolders\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"useRelativePath\",\"DefaultValue\":true}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"GetFilePathsInDirectory\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"directoryPath\",\"DefaultValue\":\"./\"},{\"Type\":\"System.String\",\"Name\":\"searchPattern\",\"DefaultValue\":\"*\"},{\"Type\":\"System.String[]\",\"Name\":\"excludePatterns\"},{\"Type\":\"System.Boolean\",\"Name\":\"includeSubfolders\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"useRelativePath\",\"DefaultValue\":true}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"WriteBase64ToFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.String\",\"Name\":\"base64\"},{\"Type\":\"System.Boolean\",\"Name\":\"overwrite\",\"DefaultValue\":false}]},{\"MethodName\":\"WriteBytesToFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Byte[]\",\"Name\":\"content\"},{\"Type\":\"System.Boolean\",\"Name\":\"overwrite\",\"DefaultValue\":false}]},{\"MethodName\":\"WriteToFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.Object\",\"Name\":\"content\"},{\"Type\":\"System.Boolean\",\"Name\":\"overwrite\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"}]},{\"MethodName\":\"AppendToFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.String\",\"Name\":\"content\"},{\"Type\":\"System.String\",\"Name\":\"seperator\"},{\"Type\":\"System.Boolean\",\"Name\":\"loadVariables\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"emptyVariableIfNotFound\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"encoding\",\"DefaultValue\":\"utf-8\"}]},{\"MethodName\":\"CopyFiles\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"directoryPath\"},{\"Type\":\"System.String\",\"Name\":\"destinationPath\"},{\"Type\":\"System.String\",\"Name\":\"searchPattern\",\"DefaultValue\":\"*\"},{\"Type\":\"System.String[]\",\"Name\":\"excludePatterns\"},{\"Type\":\"System.Boolean\",\"Name\":\"includeSubfoldersAndFiles\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"overwriteFiles\",\"DefaultValue\":false}]},{\"MethodName\":\"MoveFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"sourceFileName\"},{\"Type\":\"System.String\",\"Name\":\"destFileName\"},{\"Type\":\"System.Boolean\",\"Name\":\"createDirectoryIfNotExisting\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"overwriteFile\",\"DefaultValue\":false}]},{\"MethodName\":\"CopyFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"sourceFileName\"},{\"Type\":\"System.String\",\"Name\":\"destFileName\"},{\"Type\":\"System.Boolean\",\"Name\":\"createDirectoryIfNotExisting\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"overwriteFile\",\"DefaultValue\":false}]},{\"MethodName\":\"DeleteFile\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"fileName\"},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":false}]},{\"MethodName\":\"GetFileInfo\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"fileName\"}],\"ReturnValue\":{\"Type\":\"System.IO.Abstractions.IFileInfo\"}},{\"MethodName\":\"CreateDirectory\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"directoryPath\"},{\"Type\":\"System.Boolean\",\"Name\":\"incrementalNaming\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"DeleteDirectory\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"directoryPath\"},{\"Type\":\"System.Boolean\",\"Name\":\"recursive\",\"DefaultValue\":true},{\"Type\":\"System.Boolean\",\"Name\":\"throwErrorOnNotFound\",\"DefaultValue\":false}]},{\"MethodName\":\"StopListeningToFileChange\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"fileSearchPatterns\"},{\"Type\":\"PLang.Models.GoalToCall\",\"Name\":\"goalToCall\"}]},{\"Description\":\"debounceTime is the time in ms that is waited until action is executed to prevent multiple execution for same file. At least one listenFor variable needs to be true\",\"MethodName\":\"ListenToFileChange\",\"Parameters\":[{\"Type\":\"List<string>\",\"Name\":\"fileSearchPatterns\"},{\"Type\":\"PLang.Models.GoalToCall\",\"Name\":\"goalToCall\"},{\"Type\":\"List<string>\",\"Name\":\"excludeFiles\"},{\"Type\":\"System.Boolean\",\"Name\":\"includeSubdirectories\",\"DefaultValue\":false},{\"Type\":\"System.Int64\",\"Name\":\"debounceTime\",\"DefaultValue\":150},{\"Type\":\"System.Boolean\",\"Name\":\"listenForFileChange\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"listenForFileCreated\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"listenForFileDeleted\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"listenForFileRename\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"absoluteFilePathVariableName\",\"DefaultValue\":\"FullPath\"},{\"Type\":\"System.String\",\"Name\":\"fileNameVariableName\",\"DefaultValue\":\"Name\"},{\"Type\":\"System.String\",\"Name\":\"changeTypeVariableName\",\"DefaultValue\":\"ChangeType\"},{\"Type\":\"System.String\",\"Name\":\"senderVariableName\",\"DefaultValue\":\"Sender\"},{\"Type\":\"System.String\",\"Name\":\"oldFileAbsoluteFilePathVariableName\",\"DefaultValue\":\"OldFullPath\"},{\"Type\":\"System.String\",\"Name\":\"oldFileNameVariableName\",\"DefaultValue\":\"OldName\"}]},{\"Description\":\"Reads pdf file and loads into return variable. format can be md|text. imageAction can be none|base64|pathToFolder.\",\"MethodName\":\"ReadPdf\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"path\"},{\"Type\":\"System.String\",\"Name\":\"format\",\"DefaultValue\":\"md\"},{\"Type\":\"System.String\",\"Name\":\"imageAction\",\"DefaultValue\":\"none\"},{\"Type\":\"System.Boolean\",\"Name\":\"includePageNr\",\"DefaultValue\":true},{\"Type\":\"System.String\",\"Name\":\"password\"}],\"ReturnValue\":{\"Type\":\"System.String\"}}]\r\n## functions available ends ##\r\n## defined variables ##\r\nsystem (type:object), \r\n## defined variables ##"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "file read llm/suggestTestValuesSystem.txt, load vars, \"\" for missing vars, write to %system%"
          }
        ]
      }
    ],
    "type": "PLang.Modules.GenericFunctionBuilder",
    "caching": true,
    "RawResponse": "```json\n{\n\t\"FunctionName\": \"ReadTextFile\",\n\t\"Parameters\": [{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"path\",\n\t\t\t\"Value\": \"llm/suggestTestValuesSystem.txt\"\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"returnValueIfFileNotExisting\",\n\t\t\t\"Value\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.Boolean\",\n\t\t\t\"Name\": \"throwErrorOnNotFound\",\n\t\t\t\"Value\": true\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.Boolean\",\n\t\t\t\"Name\": \"loadVariables\",\n\t\t\t\"Value\": true\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.Boolean\",\n\t\t\t\"Name\": \"emptyVariableIfNotFound\",\n\t\t\t\"Value\": true\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"encoding\",\n\t\t\t\"Value\": \"utf-8\"\n\t\t}\n\t],\n\t\"ReturnValues\": [{\n\t\t\"Type\": \"System.Object\",\n\t\t\"VariableName\": \"system\"\n\t}]\n}\n```"
  },
  "RunOnBuild": false,
  "Metadata": {}
}