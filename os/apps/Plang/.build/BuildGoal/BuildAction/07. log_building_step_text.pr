{
  "Text": "log info \"Building %step.Text%\"",
  "ModuleType": null,
  "Reload": false,
  "LlmRequest": [
    {
      "temperature": 0.0,
      "top_p": 0.0,
      "frequencyPenalty": 0.0,
      "presencePenalty": 0.0,
      "maxLength": 4000,
      "llmResponseType": "json",
      "scheme": "{\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null,\n\t\"Instruction\": {\n\t\"Text\": string,\n\t\"ModuleType\": string,\n\t\"GenericFunctionType\": string,\n\t\"FunctionJson\"?: jtoken\n}\n}",
      "model": "gpt-4.1-mini",
      "promptMessage": [
        {
          "role": "system",
          "content": [
            {
              "type": "text",
              "text": "User is writing code in plang programming language.\r\n\r\nYour job is: \r\n1. Parse and understand user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\n## Rules\r\n%variable% in plang is defined with starting and ending percentage sign (%)\r\n%variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nleave %variable% as is and do not change text to a variable\r\nnull is used to represent no value, e.g. { \"name\": null }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See <Example>\r\nError handling is process by another step, if you see 'on error...' you can ignore it\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")% \r\n- settingName would be the api key, config key, \r\n- defaultValue for settings is the usual value given, make it \"\" if no value can be default\r\n- Explain is an explanation about the setting that novice user can understand.\r\nDictionary<T1, T2> value is {key: value, ... }\r\n\r\n<Example>\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n<Example>\r\n\r\n## JSON scheme information\r\nReasoning: A brief description of the reasoning behind the selection of the function and parameters based on the user's intent. This property provides context for why a particular function was chosen and how it aligns with the user intent.\r\nName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null."
            },
            {
              "type": "text",
              "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null,\n\t\"Instruction\": {\n\t\"Text\": string,\n\t\"ModuleType\": string,\n\t\"GenericFunctionType\": string,\n\t\"FunctionJson\"?: jtoken\n}\n}"
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "## Canonical User Intent (already disambiguated by LLM)\r\nLog an informational message that includes the content of the variable %step.Text%\n## functions available starts ##\r\n{\"Methods\":[{\"Description\":\"loggerLevel can be trace, debug, information, warning, error. args can be null if not defined\",\"MethodName\":\"Log\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"message\",\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"loggerLevel\",\"DefaultValue\":\"information\",\"IsRequired\":false},{\"Type\":\"System.Object[]\",\"Name\":\"args\",\"IsRequired\":false}]}],\"SupportingObjects\":[]}\r\n## functions available ends ##\r\n## defined variables ##\r\nstep.text (type:object), \r\n## defined variables ##"
            }
          ]
        },
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              "text": "log info \"Building %step.Text%\""
            }
          ]
        }
      ],
      "type": "PLang.Modules.GenericFunctionBuilder",
      "caching": true,
      "RawResponse": "{\n  \"Reasoning\": \"The user wants to log an informational message that includes the content of the variable %step.Text%. The Log function with loggerLevel set to 'information' is appropriate for this purpose.\",\n  \"Name\": \"Log\",\n  \"Parameters\": [\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"message\",\n      \"Value\": \"Building %step.Text%\"\n    },\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"loggerLevel\",\n      \"Value\": \"information\"\n    }\n  ],\n  \"ReturnValues\": null,\n  \"Instruction\": {\n    \"Text\": \"Log an informational message 'Building %step.Text%'\",\n    \"ModuleType\": \"Logging\",\n    \"GenericFunctionType\": \"Log\",\n    \"FunctionJson\": null\n  }\n}"
    }
  ],
  "Properties": {
    "Parameters": {
      "message": [
        {
          "Name": "message",
          "FullTypeName": "System.String"
        }
      ],
      "loggerLevel": [
        {
          "Name": "loggerLevel",
          "FullTypeName": "System.String"
        }
      ],
      "args": [
        {
          "Name": "args",
          "FullTypeName": "System.Object[]"
        }
      ]
    },
    "ReturnValues": {}
  },
  "GenericFunctionType": "PLang.Modules.BaseBuilder+GenericFunction",
  "Function": {
    "Reasoning": "The user wants to log an informational message that includes the content of the variable %step.Text%. The Log function with loggerLevel set to 'information' is appropriate for this purpose.",
    "Name": "Log",
    "Parameters": [
      {
        "Type": "System.String",
        "Name": "message",
        "Value": "Building %step.Text%"
      },
      {
        "Type": "System.String",
        "Name": "loggerLevel",
        "Value": "information"
      }
    ],
    "ReturnValues": null
  }
}