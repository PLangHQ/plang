{
  "Text": "[llm] system: \"Generate any javascript and css include <script> and <style>\"\n        continue from prev: true\n        max length: 32768\n        scheme: {javascript:string, css:string}        \n        model: \"gpt-4.1\"\n        write to %jsAndCss%",
  "ModuleType": "PLang.Modules.LlmModule",
  "GenericFunctionType": "PLang.Modules.BaseBuilder+GenericFunction",
  "Function": {
    "Reasoning": "The user wants to generate JavaScript and CSS code snippets including <script> and <style> tags. The user has specified a scheme for the response and wants to continue from the previous conversation. The model specified is 'gpt-4.1', and the user wants the result to be written to the variable %jsAndCss%.",
    "Name": "AskLlm",
    "Parameters": [
      {
        "Type": "System.Collections.Generic.List`1[PLang.Models.LlmMessage]",
        "Name": "promptMessages",
        "Value": [
          {
            "role": "system",
            "content": [
              {
                "type": "text",
                "text": "Generate any javascript and css include <script> and <style>"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.String",
        "Name": "scheme",
        "Value": "{javascript:string, css:string}"
      },
      {
        "Type": "System.String",
        "Name": "model",
        "Value": "gpt-4.1"
      },
      {
        "Type": "System.Int32",
        "Name": "maxLength",
        "Value": 32768
      },
      {
        "Type": "System.Boolean",
        "Name": "continuePrevConversation",
        "Value": true
      },
      {
        "Type": "System.String",
        "Name": "llmResponseType",
        "Value": "json"
      }
    ],
    "ReturnValues": [
      {
        "Type": "object",
        "VariableName": "%jsAndCss%"
      }
    ]
  },
  "Properties": {
    "ReturnScheme": {
      "type": "object",
      "properties": {
        "javascript": {
          "type": "string"
        },
        "css": {
          "type": "string"
        }
      },
      "required": [
        "javascript",
        "css"
      ]
    },
    "Parameters": {
      "promptMessages": [
        {
          "Name": "promptMessages",
          "FullTypeName": "System.Object"
        }
      ],
      "scheme": [
        {
          "Name": "scheme",
          "FullTypeName": "System.String"
        }
      ],
      "model": [
        {
          "Name": "model",
          "FullTypeName": "System.String"
        }
      ],
      "temperature": [
        {
          "Name": "temperature",
          "FullTypeName": "System.Double"
        }
      ],
      "topP": [
        {
          "Name": "topP",
          "FullTypeName": "System.Double"
        }
      ],
      "frequencyPenalty": [
        {
          "Name": "frequencyPenalty",
          "FullTypeName": "System.Double"
        }
      ],
      "presencePenalty": [
        {
          "Name": "presencePenalty",
          "FullTypeName": "System.Double"
        }
      ],
      "maxLength": [
        {
          "Name": "maxLength",
          "FullTypeName": "System.Int32"
        }
      ],
      "cacheResponse": [
        {
          "Name": "cacheResponse",
          "FullTypeName": "System.Boolean"
        }
      ],
      "llmResponseType": [
        {
          "Name": "llmResponseType",
          "FullTypeName": "System.String"
        }
      ],
      "continuePrevConversation": [
        {
          "Name": "continuePrevConversation",
          "FullTypeName": "System.Boolean"
        }
      ]
    },
    "ReturnValues": {
      "%jsAndCss%": []
    }
  },
  "LlmRequest": [
    {
      "temperature": 0.0,
      "top_p": 0.0,
      "frequencyPenalty": 0.0,
      "presencePenalty": 0.0,
      "maxLength": 4000,
      "llmResponseType": "json",
      "scheme": "{\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}",
      "model": "gpt-4o",
      "promptMessage": [
        {
          "role": "system",
          "content": [
            {
              "type": "text",
              "text": "User is writing code in plang programming language.\r\n\r\nYour job is: \r\n1. Parse and understand user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\n## Rules\r\n%variable% in plang is defined with starting and ending percentage sign (%)\r\n%variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nleave %variable% as is and do not change text to a variable\r\nnull is used to represent no value, e.g. { \"name\": null }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See <Example>\r\nError handling is process by another step, if you see 'on error...' you can ignore it\r\nIf there is some api key, settings, config replace it with %Settings.NameOfApiKey% \r\n- NameOfApiKey should named in relation to what is happening if change is needed\r\nDictionary<T1, T2> value is {key: value, ... }\r\nONLY when string is prefixed with # is for translation, modify the string to be \"#:...\", e.g. #\"Hello\" => \"#:Hello\".\r\n\r\n< Example >\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n<Example>\r\n\r\n## JSON scheme information\r\nReasoning: A brief description of the reasoning behind the selection of the function and parameters based on the user's intent. This property provides context for why a particular function was chosen and how it aligns with the user intent.\r\nName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null.\nThe following user request is for constructing a message to LLM engine\r\n\r\nllmResponseType can be null, text, json, markdown or html. default is null. \r\nWhen user defines a scheme then use json for llmResponseType, unless user defines otherwise\r\n\r\npromptMessages contains the system, assistant and user messages. assistant or user message is required.\r\nDetermine what part is system, assistant and user properties. If you cannot map it, the whole user request should be on user role\r\nif user does not define model, set model to \"gpt-4o-mini\" if content type is image_url\r\nmodel is default gpt-4o-mini\r\nthe json scheme from promptMessages without image is : {role:string, content:[{type:string, text:string}]} \r\nthe json scheme from promptMessages with image is : {role:string, content:[{type:string, image_url:{url:string}]} \r\n\r\n## examples ##\r\nsystem: %system%\r\n[\r\n\t{\r\n        \"role\": \"system\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"%system%\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nsystem: %system%, assistant: %assistant%, user: %user%\r\n\r\npromptMessages: \r\n[\r\n\t{\r\n        \"role\": \"system\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"%system%\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"role\": \"assistant\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"%assistant%\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"role\": \"user\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"%user%\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nsystem: do stuff, user: this is data from user, write to %data%, %output% and %dest% => scheme: null, llResponseType=null\r\nsystem: setup up system, asssistant: some assistant stuff, user: this is data from user, scheme: {data:string, year:number, name:string} => scheme:  {data:string, year:number, name:string}\r\n\r\npromptMessages: \r\n[\r\n\t{\r\n        \"role\": \"system\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"setup up system\\nYou MUST respond in JSON, scheme:{data:string, year:number, name:string}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"role\": \"assistant\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"some assistant stuff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"role\": \"user\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"text\": \"this is data from user\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\ncontent can also have the type of image_url, the content of image_url json property can be a URL or a base64 of image.\r\nonly \"user\" role can send image\r\n\r\n\"role\": \"user\",\r\n\"content\": [\r\n    {\r\n        \"type\": \"image_url\",\r\n        \"image_url\": {\r\n            \"url\": \"%base64OfImage%\"\r\n        }\r\n    }\r\n]\r\n\r\nor url \r\n\r\n\"role\": \"user\",\r\n\"content\": [\r\n   {\r\n        \"type\": \"image_url\",\r\n        \"image_url\": {\r\n            \"url\": \"http://example.org/image.jpg\"\r\n        }\r\n    }\r\n]\r\n\r\n\r\n\r\n## examples ##\r\n"
            },
            {
              "type": "text",
              "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}"
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "## Canonical User Intent (already disambiguated by LLM)\r\nGenerate JavaScript and CSS code snippets including <script> and <style> tags\n## functions available starts ##\r\n{\"Methods\":[{\"Description\":null,\"MethodName\":\"AppendToSystem\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"system\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":true}],\"ReturnValue\":null},{\"Description\":null,\"MethodName\":\"AppendToAssistant\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"assistant\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":true}],\"ReturnValue\":null},{\"Description\":null,\"MethodName\":\"AppendToUser\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"user\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":true}],\"ReturnValue\":null},{\"Description\":\"Retrieves all previous messages\",\"MethodName\":\"GetPreviousMessages\",\"Parameters\":[],\"ReturnValue\":{\"Type\":\"PLang.Models.LlmMessage\"}},{\"Description\":null,\"MethodName\":\"AskLlm\",\"Parameters\":[{\"Type\":\"System.Collections.Generic.List`1[PLang.Models.LlmMessage]\",\"Name\":\"promptMessages\",\"Description\":\"(see Type information in SupportingObjects)\",\"DefaultValue\":null,\"TypeProperties\":null,\"IsRequired\":true},{\"Type\":\"System.String\",\"Name\":\"scheme\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.String\",\"Name\":\"model\",\"DefaultValue\":\"gpt-4o-mini\",\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Double\",\"Name\":\"temperature\",\"DefaultValue\":0.0,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Double\",\"Name\":\"topP\",\"DefaultValue\":0.0,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Double\",\"Name\":\"frequencyPenalty\",\"DefaultValue\":0.0,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Double\",\"Name\":\"presencePenalty\",\"DefaultValue\":0.0,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Int32\",\"Name\":\"maxLength\",\"DefaultValue\":4000,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Boolean\",\"Name\":\"cacheResponse\",\"DefaultValue\":true,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.String\",\"Name\":\"llmResponseType\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":false},{\"Type\":\"System.Boolean\",\"Name\":\"continuePrevConversation\",\"DefaultValue\":false,\"Description\":null,\"IsRequired\":false}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"Description\":null,\"MethodName\":\"UseSharedIdentity\",\"Parameters\":[{\"Type\":\"System.Boolean\",\"Name\":\"useSharedIdentity\",\"DefaultValue\":true,\"Description\":null,\"IsRequired\":false}],\"ReturnValue\":null},{\"Description\":null,\"MethodName\":\"GetLlmIdentity\",\"Parameters\":[],\"ReturnValue\":{\"Type\":\"System.String\"}}],\"SupportingObjects\":[{\"Type\":\"PLang.Models.ImageUrl\",\"Name\":\"ImageUrl\",\"Description\":null,\"DefaultValue\":null,\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Url\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":true}],\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.List`1[PLang.Models.LlmMessage]\",\"Name\":\"promptMessages\",\"Description\":null,\"DefaultValue\":null,\"TypeProperties\":[{\"Type\":\"System.String\",\"Name\":\"Role\",\"DefaultValue\":null,\"Description\":null,\"IsRequired\":true},{\"Type\":\"System.Collections.Generic.List`1[PLang.Models.LlmContent]\",\"Name\":\"Content\",\"Description\":null,\"DefaultValue\":null,\"TypeProperties\":null,\"IsRequired\":true}],\"IsRequired\":false}]}\r\n## functions available ends ##\r\n## defined variables ##\r\njsAndCss (type:object), \r\n## defined variables ##"
            }
          ]
        },
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              "text": "[llm] system: \"Generate any javascript and css include <script> and <style>\"\n        continue from prev: true\n        max length: 32768\n        scheme: {javascript:string, css:string}        \n        model: \"gpt-4.1\"\n        write to %jsAndCss%"
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "Previous LLM request caused following <error>, try to fix it.\r\n<error>\nLLM gave empty responseType in last request. Please make sure that you give responseType. If non is defined set it as text<error>"
            }
          ]
        }
      ],
      "type": "PLang.Modules.LlmModule.Builder",
      "caching": true,
      "RawResponse": "{\n\t\"Reasoning\": \"The user wants to generate JavaScript and CSS code snippets including <script> and <style> tags. The user has specified a scheme for the response and wants to continue from the previous conversation. The model specified is 'gpt-4.1', and the user wants the result to be written to the variable %jsAndCss%.\",\n\t\"Name\": \"AskLlm\",\n\t\"Parameters\": [\n\t\t{\n\t\t\t\"Type\": \"System.Collections.Generic.List`1[PLang.Models.LlmMessage]\",\n\t\t\t\"Name\": \"promptMessages\",\n\t\t\t\"Value\": [\n\t\t\t\t{\n\t\t\t\t\t\"role\": \"system\",\n\t\t\t\t\t\"content\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Generate any javascript and css include <script> and <style>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"scheme\",\n\t\t\t\"Value\": \"{javascript:string, css:string}\"\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"model\",\n\t\t\t\"Value\": \"gpt-4.1\"\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.Int32\",\n\t\t\t\"Name\": \"maxLength\",\n\t\t\t\"Value\": 32768\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.Boolean\",\n\t\t\t\"Name\": \"continuePrevConversation\",\n\t\t\t\"Value\": true\n\t\t},\n\t\t{\n\t\t\t\"Type\": \"System.String\",\n\t\t\t\"Name\": \"llmResponseType\",\n\t\t\t\"Value\": \"json\"\n\t\t}\n\t],\n\t\"ReturnValues\": [\n\t\t{\n\t\t\t\"Type\": \"object\",\n\t\t\t\"VariableName\": \"%jsAndCss%\"\n\t\t}\n\t]\n}"
    }
  ]
}