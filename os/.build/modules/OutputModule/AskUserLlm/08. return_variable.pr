{
  "Text": "return %result%",
  "ModuleType": null,
  "Reload": false,
  "LlmRequest": [
    {
      "temperature": 0.0,
      "top_p": 0.0,
      "frequencyPenalty": 0.0,
      "presencePenalty": 0.0,
      "maxLength": 4000,
      "llmResponseType": "json",
      "scheme": "{\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}",
      "model": "gpt-4o",
      "promptMessage": [
        {
          "role": "system",
          "content": [
            {
              "type": "text",
              "text": "Your job is: \r\n1. Parse user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\n## Rules\r\nVariable is defined with starting and ending %, e.g. %filePath%. \r\n%Variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nnull is used to represent no value, e.g. { \"name\": null }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See <Example>\r\nError handling is process by another step, if you see 'on error...' you can ignore it\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")% \r\n- settingName would be the api key, config key, \r\n- defaultValue for settings is the usual value given, make it \"\" if no value can be default\r\n- Explain is an explanation about the setting that novice user can understand.\r\nDictionary<T1, T2> value is {key: value, ... }\r\n\r\n<Example>\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n<Example>\r\n\r\n## JSON scheme information\r\nReasoning: A brief description of the reasoning behind the selection of the function and parameters based on the user's intent. This property provides context for why a particular function was chosen and how it aligns with the user intent.\r\nName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null."
            },
            {
              "type": "text",
              "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"Reasoning\": string,\n\t\"Name\": string,\n\t\"Parameters\"?: [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}] = null,\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}"
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "## Canonical User Intent (already disambiguated by LLM)\r\nThe user wants to return the value of a variable named %result%."
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "## functions available starts ##\r\n[{\"MethodName\":\"Load\",\"Parameters\":[{\"Type\":\"List<string>\",\"Name\":\"variables\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"Store\",\"Parameters\":[{\"Type\":\"List<string>\",\"Name\":\"variables\"}]},{\"Description\":\"One or more variables to return. Variable can contain !, e.g. !callback=%callback%. When key is undefined, it is same as value, e.g. return %name% => then variables dictionary has key and value as name=%name%\",\"MethodName\":\"Return\",\"Parameters\":[{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"variables\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnCreateVariablesListener\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"keys\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnChangeVariablesListener\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"keys\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"System.Boolean\",\"Name\":\"notifyWhenCreated\",\"DefaultValue\":true},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnRemoveVariablesListener\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"keys\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnCreateVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnChangeVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"System.Boolean\",\"Name\":\"notifyWhenCreated\",\"DefaultValue\":true},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnRemoveVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnCreateStaticVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnChangeStaticVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"System.Boolean\",\"Name\":\"notifyWhenCreated\",\"DefaultValue\":true},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"Description\":\"goalName should be prefix with !, it can whole word only but can contain dot(.)\",\"MethodName\":\"OnRemoveStaticVariableListener\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"goalName\"},{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"parameters\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"waitForResponse\",\"DefaultValue\":true},{\"Type\":\"System.Int32\",\"Name\":\"delayWhenNotWaitingInMilliseconds\",\"DefaultValue\":50}]},{\"MethodName\":\"GetEnvironmentVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"LoadVariables\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"Description\":\"Set string variable. Developer might use single/double quote to indicate the string value, the wrapped quote should not be included in the value. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it\",\"MethodName\":\"SetStringVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.String\",\"Name\":\"value\"},{\"Type\":\"System.Boolean\",\"Name\":\"urlDecode\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"htmlDecode\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.String\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set json variable.\",\"MethodName\":\"SetJsonObjectVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Object\",\"Name\":\"value\"},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set default value of int/long variable. If value already exists it wont be set.\",\"MethodName\":\"SetDefaultNumberVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Nullable`1[System.Int64]\",\"Name\":\"value\"},{\"Type\":\"System.Nullable`1[System.Int64]\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set int/long variable.\",\"MethodName\":\"SetNumberVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Nullable`1[System.Int64]\",\"Name\":\"value\"},{\"Type\":\"System.Nullable`1[System.Int64]\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set double variable.\",\"MethodName\":\"SetDoubleVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Nullable`1[System.Double]\",\"Name\":\"value\"},{\"Type\":\"System.Nullable`1[System.Double]\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set float variable.\",\"MethodName\":\"SetFloatVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Nullable`1[System.Single]\",\"Name\":\"value\"},{\"Type\":\"System.Nullable`1[System.Single]\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set bool variable.\",\"MethodName\":\"SetBoolVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Nullable`1[System.Boolean]\",\"Name\":\"value\"},{\"Type\":\"System.Nullable`1[System.Boolean]\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set variable. Developer might use single/double quote to indicate the string value. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it\",\"MethodName\":\"SetVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Object\",\"Name\":\"value\"},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"keyIsDynamic\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"onlyIfValueIsNot\"},{\"Type\":\"System.Object\",\"Name\":\"defaultValue\"}]},{\"Description\":\"Set multiple variables with possible default values. Number can be represented with _, e.g. 100_000. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it. onlyIfValueIsSet can be define by user, null|\\\"null\\\"|\\\"empty\\\" or value a user defines. Be carefull, there is difference between null and \\\"null\\\", to be \\\"null\\\" is must be defined by user.\",\"MethodName\":\"SetVariables\",\"Parameters\":[{\"Type\":\"Dictionary<String, Tuple`2>\",\"Name\":\"keyValues\",\"TypeProperties\":[{\"Type\":\"System.Tuple`2[System.Object,System.Object]\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"keyIsDynamic\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"onlyIfValueIsNot\"}]},{\"Description\":\"Set value on variables. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it.  onlyIfValueIsSet can be define by user, null|\\\"null\\\"|\\\"empty\\\" or value a user defines. Be carefull, there is difference between null and \\\"null\\\", to be \\\"null\\\" is must be defined by user.\",\"MethodName\":\"SetValuesOnVariables\",\"Parameters\":[{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"keyValues\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"keyIsDynamic\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"onlyIfValueIsNot\"}]},{\"Description\":\"Set default value on variables if not set, good for setting value if variable is empty. Number can be represented with _, e.g. 100_000. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it.  onlyIfValueIsSet can be define by user, null|\\\"null\\\"|\\\"empty\\\" or value a user defines. Be carefull, there is difference between null and \\\"null\\\", to be \\\"null\\\" is must be defined by user.\",\"MethodName\":\"SetDefaultValueOnVariables\",\"Parameters\":[{\"Type\":\"Dictionary<String, Object>\",\"Name\":\"keyValues\",\"TypeProperties\":[{\"Type\":\"System.Object\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"keyIsDynamic\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"onlyIfValueIsNot\"}]},{\"Description\":\"Set value on variables or a default value is value is empty. Number can be represented with _, e.g. 100_000. If value is json, make sure to format it as valid json, use double quote(\\\") by escaping it.  onlyIfValueIsSet can be define by user, null|\\\"null\\\"|\\\"empty\\\" or value a user defines. Be carefull, there is difference between null and \\\"null\\\", to be \\\"null\\\" is must be defined by user.\",\"MethodName\":\"SetValueOnVariablesOrDefaultIfValueIsEmpty\",\"Parameters\":[{\"Type\":\"Dictionary<String, Tuple`2>\",\"Name\":\"keyValues\",\"TypeProperties\":[{\"Type\":\"System.Tuple`2[System.Object,System.Object]\",\"Name\":\"Item\"}]},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"keyIsDynamic\",\"DefaultValue\":false},{\"Type\":\"System.Object\",\"Name\":\"onlyIfValueIsNot\"}]},{\"Description\":\"Append to variable. valueLocation=postfix|prefix seperatorLocation=end|start\",\"MethodName\":\"AppendToVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Object\",\"Name\":\"value\"},{\"Type\":\"System.Char\",\"Name\":\"seperator\",\"DefaultValue\":\"\\n\"},{\"Type\":\"System.String\",\"Name\":\"valueLocation\",\"DefaultValue\":\"postfix\"},{\"Type\":\"System.String\",\"Name\":\"seperatorLocation\",\"DefaultValue\":\"end\"},{\"Type\":\"System.Boolean\",\"Name\":\"shouldBeUnique\",\"DefaultValue\":false},{\"Type\":\"System.Boolean\",\"Name\":\"doNotLoadVariablesInValue\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"GetVariable\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"}],\"ReturnValue\":{\"Type\":\"System.Object\"}},{\"MethodName\":\"RemoveVariables\",\"Parameters\":[{\"Type\":\"System.String[]\",\"Name\":\"keys\"}]},{\"Description\":\"Sets a value to %Settings.XXXX% variable\",\"MethodName\":\"SetSettingValue\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Object\",\"Name\":\"value\"}]},{\"Description\":\"Sets a value to %Settings.XXXX% variable but only if it is not set before\",\"MethodName\":\"SetDefaultSettingValue\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"},{\"Type\":\"System.Object\",\"Name\":\"value\"}]},{\"MethodName\":\"ConvertToBase64\",\"Parameters\":[{\"Type\":\"System.String\",\"Name\":\"key\"}],\"ReturnValue\":{\"Type\":\"System.String\"}},{\"MethodName\":\"TrimForLlm\",\"Parameters\":[{\"Type\":\"System.Object\",\"Name\":\"obj\"},{\"Type\":\"System.Int32\",\"Name\":\"maxItemCount\",\"DefaultValue\":30},{\"Type\":\"System.Nullable`1[System.Int32]\",\"Name\":\"maxItemLength\"},{\"Type\":\"System.String\",\"Name\":\"groupOn\"},{\"Type\":\"System.Int32\",\"Name\":\"samplesPerGroup\",\"DefaultValue\":5},{\"Type\":\"System.Int32\",\"Name\":\"listLimit\",\"DefaultValue\":50},{\"Type\":\"System.Int32\",\"Name\":\"totalCharsLimit\",\"DefaultValue\":2000},{\"Type\":\"System.Boolean\",\"Name\":\"formatJson\",\"DefaultValue\":false}],\"ReturnValue\":{\"Type\":\"System.Object\"}}]\r\n## functions available ends ##\r\n## defined variables ##\r\nresult (type:object), \r\n## defined variables ##"
            }
          ]
        },
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              "text": "return %result%"
            }
          ]
        }
      ],
      "type": "PLang.Modules.GenericFunctionBuilder",
      "caching": true,
      "RawResponse": "```json\n{\n\t\"Reasoning\": \"The user wants to return the value of the variable %result%. The 'Return' function is appropriate for this task as it allows returning one or more variables.\",\n\t\"Name\": \"Return\",\n\t\"Parameters\": [{\n\t\t\"Type\": \"Dictionary<String, Object>\",\n\t\t\"Name\": \"variables\",\n\t\t\"Value\": {\n\t\t\t\"result\": \"%result%\"\n\t\t}\n\t}]\n}\n```"
    }
  ],
  "Properties": {
    "Parameters": {
      "variables": [
        {
          "Name": "variables",
          "FullTypeName": "System.Object"
        }
      ]
    },
    "ReturnValues": {}
  },
  "GenericFunctionType": "PLang.Modules.BaseBuilder+GenericFunction",
  "Function": {
    "Reasoning": "The user wants to return the value of the variable %result%. The 'Return' function is appropriate for this task as it allows returning one or more variables.",
    "Name": "Return",
    "Parameters": [
      {
        "Type": "Dictionary<String, Object>",
        "Name": "variables",
        "Value": {
          "result": "%result%"
        }
      }
    ],
    "ReturnValues": null
  }
}