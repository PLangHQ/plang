## Events in Plang

To bind event in you application, create folder `events` and file called `Events.goal`

Application Lifecycle Events
```plang
Events
- before app starts, call !AppStarting
- before app ends, call !AppEnding
```

Events with Goals and Steps
```plang
Events
- before each goal in 'api/*', call !AuthenticateUser
- after each goal, call !Analyze.LogInfoAboutGoal
```

Error Handling Events

```plang
Events
- on error in step, call !Logger.StepError
- on error on goal, call !Logger.GoalError
```

Conditional Events
```plang
- before each step, include private goals, call !SendDebug, only in debug mode
- before goal ends, include private goals, call !SendDebug, only in debug mode
```

## Builder events 
Binding to plang builder, create a file called `BuilderEvents.goal`
```plang
- before each step in builder, call !AnalyzeCode
- after each step in builder, call !AnalyzeCode
```

## Run event only when parameter is provided
it is possible to define an event to run only if a parameter is provided at the startup of the app
```plang
- before each step, call !SendDebug, only when start parameter is '--debug'
```
This will only bind this event if you start the app like this
```bash
plang --debug
```
You can define your own parameter

## external events
Any external events install from an outside source should be installed into the `events/external/{appName}/` folder, e.g. `events/external/plang/` is create when you build or run a debugger.

## bind event to variable
In any goal file you can bind event to a variable
```plang
- when %name% is created, call VariableNameIsCreated
- when %email% is changed, call VariableEmailIsChanged
- when %zip% is changed or created, call VariableZipIsChanged
- when %name% is deleted, call VariableNameIsDeleted
```


## Types of Events in PLang
Before and After Events: Trigger actions before or after a specific goal or step.
Error Events: Trigger actions when an error occurs in a step or goal.
Conditional Events: Execute actions under specific conditions, like in debug mode.
Build Events: Read more about build events
Bind events to variable, on creation, update, delete