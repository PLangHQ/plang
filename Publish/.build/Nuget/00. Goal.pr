{
  "GoalName": "Nuget",
  "Comment": null,
  "Text": "Nuget",
  "GoalSteps": [
    {
      "Text": "read \"version.txt\", into %version%",
      "Comment": null,
      "ModuleType": "PLang.Modules.FileModule",
      "Name": "read_version_txt_into_version_variable",
      "Description": "Open the file 'version.txt', read its entire content as text, and assign that content to the variable named %version% for further use in the program.",
      "PrFileName": "01. read_version_txt_into_version_variable.pr",
      "RelativePrPath": ".build\\Nuget\\01. read_version_txt_into_version_variable.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\01. read_version_txt_into_version_variable.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:32:21.6058468+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 0,
      "LineNumber": 2,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "533baeff7221d34d8fdabcb438d400be238441b3d9f0d422dd408a9651a9592d",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "write out 'Publish nuget - Version:%version%'",
      "Comment": null,
      "ModuleType": "PLang.Modules.OutputModule",
      "Name": "write_out_publish_nuget_version",
      "Description": "Construct and write out the message 'Publish nuget - Version:' followed by the value of the %version% variable to the output stream, likely for logging or user notification purposes",
      "PrFileName": "02. write_out_publish_nuget_version.pr",
      "RelativePrPath": ".build\\Nuget\\02. write_out_publish_nuget_version.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\02. write_out_publish_nuget_version.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-08-03T19:36:10.1180186+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 1,
      "LineNumber": 3,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "66e8dfbd01cc5792bd237303aa609b5c14d30c992892c30cc9c8b99c9b884a66",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "dotnet pack --configuration Release -p:Version=%version%, working dir ../PLang",
      "Comment": null,
      "ModuleType": "PLang.Modules.TerminalModule",
      "Name": "dotnet_pack_with_version_and_configuration",
      "Description": "Execute the 'dotnet pack' command with the Release configuration and a version parameter set from the %version% variable, running the command in the ../PLang directory to create a NuGet package for the project located there.",
      "PrFileName": "03. dotnet_pack_with_version_and_configuration.pr",
      "RelativePrPath": ".build\\Nuget\\03. dotnet_pack_with_version_and_configuration.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\03. dotnet_pack_with_version_and_configuration.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:32:38.7238645+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 2,
      "LineNumber": 4,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "f8fab54e116778b59c9a535c2b35111383e8dbcb49076430cb1758073fae3797",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "dotnet nuget push ../PLang/bin/Release/PlangLibrary.%version%.nupkg --api-key %Settings.NugetApiKey% --source https://api.nuget.org/v3/index.json\n    , write to %output%, %error%",
      "Comment": null,
      "ModuleType": "PLang.Modules.TerminalModule",
      "Name": "push_nuget_package_with_dotnet_cli",
      "Description": "Execute the 'dotnet nuget push' command to upload the NuGet package located at '../PLang/bin/Release/PlangLibrary.%version%.nupkg' to the NuGet repository at 'https://api.nuget.org/v3/index.json' using the API key stored in %Settings.NugetApiKey%. Capture the standard output and error output of this command into the variables %output% and %error%, respectively.",
      "PrFileName": "04. push_nuget_package_with_dotnet_cli.pr",
      "RelativePrPath": ".build\\Nuget\\04. push_nuget_package_with_dotnet_cli.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\04. push_nuget_package_with_dotnet_cli.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-08-03T21:13:27.4631917+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 3,
      "LineNumber": 5,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "f91138ebfb616d597865ec91a0924c8b104572cc79c36a94fe57c053aef95c07",
      "BuilderVersion": "1.0.0.0",
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "if %output% contains \"already exists and cannot be modified\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.ConditionalModule",
      "Name": "check_output_for_error_message",
      "Description": "Evaluate whether the string stored in the variable %output% includes the substring 'already exists and cannot be modified'. This is typically used to branch logic based on the presence of this error message.",
      "PrFileName": "05. check_output_for_error_message.pr",
      "RelativePrPath": ".build\\Nuget\\05. check_output_for_error_message.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\05. check_output_for_error_message.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:00.0876721+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 4,
      "LineNumber": 7,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "ac7dae1dcd527bf12d8db0a91bcd315a16d2d6e2448dd42ee4b89d6924539494",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "logger warning \"Version %version% is already published\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.LoggerModule",
      "Name": "log_version_already_published_warning",
      "Description": "Generate a warning log entry with the message 'Version %version% is already published', where %version% is a variable representing the version number or identifier",
      "PrFileName": "06. log_version_already_published_warning.pr",
      "RelativePrPath": ".build\\Nuget\\06. log_version_already_published_warning.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\06. log_version_already_published_warning.pr",
      "InstructionHash": null,
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:06.934651+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 5,
      "LineNumber": 8,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "f29b7aca3561e6dbe3e0e9441bfe3032cece2990f9192b0906cc087339728ec6",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "dotnet pack --configuration Release -p:Version=%version%, working dir ../PlangTests",
      "Comment": null,
      "ModuleType": "PLang.Modules.TerminalModule",
      "Name": "dotnet_pack_with_version_and_configuration",
      "Description": "Execute the 'dotnet pack' command with the Release configuration and set the package version to the value of the %version% variable, running the command in the ../PlangTests directory",
      "PrFileName": "07. dotnet_pack_with_version_and_configuration.pr",
      "RelativePrPath": ".build\\Nuget\\07. dotnet_pack_with_version_and_configuration.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\07. dotnet_pack_with_version_and_configuration.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:16.3916155+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 6,
      "LineNumber": 9,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "1bbe5f56df70340f213783045d3e102bd47013a9197eaa4390107432d4a43dac",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "dotnet nuget push ../PLang/bin/Release/PlangLibrary.Tests.%version%.nupkg --api-key %Settings.NugetApiKey% --source https://api.nuget.org/v3/index.json\n    , write to %output%, %error%",
      "Comment": null,
      "ModuleType": "PLang.Modules.TerminalModule",
      "Name": "push_nuget_package_with_dotnet_cli",
      "Description": "Execute the 'dotnet nuget push' command to upload the specified NuGet package file to the official NuGet source using the provided API key. The command's standard output and error output are captured and stored in the variables %output% and %error% respectively for further processing or logging.",
      "PrFileName": "08. push_nuget_package_with_dotnet_cli.pr",
      "RelativePrPath": ".build\\Nuget\\08. push_nuget_package_with_dotnet_cli.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\08. push_nuget_package_with_dotnet_cli.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:27.2656646+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 7,
      "LineNumber": 10,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "aa2da62f57cb69a3fc112580eecda16203122cab9bd3c0447cbcf7e55223501d",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "if %output% contains \"already exists and cannot be modified\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.ConditionalModule",
      "Name": "check_output_for_error_message",
      "Description": "Evaluate whether the string stored in the variable %output% includes the substring 'already exists and cannot be modified'. This is typically used to branch logic based on the presence of this error message.",
      "PrFileName": "09. check_output_for_error_message.pr",
      "RelativePrPath": ".build\\Nuget\\09. check_output_for_error_message.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\09. check_output_for_error_message.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:27.3681005+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 8,
      "LineNumber": 12,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "c5122e6288d07fcd52d8c9105b08ed2c72ac19847d87b029eba2cf542770015e",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "logger warning \"Test Version %version% is already published\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.LoggerModule",
      "Name": "log_warning_version_already_published",
      "Description": "Generate a warning log entry with the message 'Test Version {version} is already published', where {version} is a variable that will be interpolated into the message",
      "PrFileName": "10. log_warning_version_already_published.pr",
      "RelativePrPath": ".build\\Nuget\\10. log_warning_version_already_published.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\10. log_warning_version_already_published.pr",
      "InstructionHash": null,
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:35.2001564+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 9,
      "LineNumber": 13,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "64a6560e3f2da3ded620da930d9401528c435baae3b09418ed2bc300a74093e9",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    },
    {
      "Text": "write out \"Published - %version%\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.OutputModule",
      "Name": "write_out_published_version",
      "Description": "Output the string 'Published - ' concatenated with the current value of the variable %version% to the output stream, likely to inform the user or log the published version information.",
      "PrFileName": "11. write_out_published_version.pr",
      "RelativePrPath": ".build\\Nuget\\11. write_out_published_version.pr",
      "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\11. write_out_published_version.pr",
      "InstructionHash": null,
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Confidence": null,
      "Inconsistency": null,
      "Generated": "2025-06-24T08:33:43.4197619+00:00",
      "WaitForExecution": true,
      "LoggerLevel": null,
      "ErrorHandlers": null,
      "Retry": false,
      "RetryCount": 1,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Number": 10,
      "LineNumber": 14,
      "EventBinding": null,
      "IsEvent": false,
      "Hash": "3bd915d2f56ad686b9dbecd522adbfd38df1149535e21d4e7aeef970172bc90a",
      "BuilderVersion": null,
      "RelativeGoalPath": "\\Nuget.goal",
      "UserIntent": null
    }
  ],
  "SubGoals": [],
  "Description": "The Nuget goal automates the process of reading a version number from a file, packaging a library and its tests, and pushing them to the NuGet repository. It checks for existing versions to avoid overwriting published packages and logs warnings if a version is already published.",
  "Visibility": 1,
  "GoalFileName": "Nuget.goal",
  "PrFileName": "00. Goal.pr",
  "RelativeGoalPath": "\\Nuget.goal",
  "RelativeGoalFolderPath": "\\",
  "RelativePrPath": ".build\\Nuget\\00. Goal.pr",
  "RelativePrFolderPath": ".build\\Nuget",
  "AbsoluteGoalPath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\Nuget.goal",
  "AbsolutePrFilePath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget\\00. Goal.pr",
  "AbsolutePrFolderPath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish\\.build\\Nuget",
  "AbsoluteAppStartupFolderPath": "C:\\Users\\Ingi Gauti\\source\\repos\\plang\\Publish",
  "RelativeAppStartupFolderPath": null,
  "BuilderVersion": "1.0.0.0",
  "GoalInfo": {
    "GoalApiInfo": {
      "Method": "POST",
      "Description": "This API allows users to package and publish a NuGet package. It first reads the version from 'version.txt' into a variable. Then, it creates a NuGet package using the 'dotnet pack' command with the specified version and configuration. Finally, it pushes the created package to the NuGet repository using the provided API key and source URL.",
      "ContentEncoding": "utf-8",
      "ContentType": "application/json",
      "MaxContentLengthInBytes": 4194304,
      "CacheControlPrivateOrPublic": null,
      "CacheControlMaxAge": null,
      "NoCacheOrNoStore": null
    }
  },
  "Injections": [],
  "Signature": null,
  "Hash": "e03812fc544e233bb69bc4ab46231f007a62c23087e6ce0d599a09606e09a1c3",
  "IncomingVariablesRequired": {
    "Settings.NugetApiKey": "The API key required to authenticate with the NuGet repository."
  },
  "DataSourceName": null,
  "IsSetup": false,
  "IsEvent": false
}